#gmall0328

 gmall-manage-web/service  8071 8081 需要登录 商品后台管理
 gmall-item-web/service 8072 8082 需要登录 商品详情
 gmall-list-web/service 8073 8083 需要登录 前端大首页 以及首页搜索后的大搜索列表列表页
 gmall-cart-web/service 8074 8084 需要登录 加入购物车 浏览购物车 用户登录与否的购物车信息存放位置 与 更新。可跳转到结算。进行结算时 需要登录 并有sso拦截了。
 gmall-passport(user) 8075  8085  需要启动 SSO单点登录系统：拦截用户的关于购物车结算请求  过滤用户登录 验证token判断用户是否登录 没有登录的话 跳转到登录页面 注册并赋予token后 进入登录页面
gmall-user(service)  8070/  gmall-user-web 8080       需要启动  与用户相关的功能等   如 登录之类的。   gmall-user(service)  需要redis。此启动类位置：package com.atguigu.gmall;redis类位置：package com.atguigu.gmall.util;
gmall-order 8086  需要登录 结算页；
gmall-payment 8087 支付系统

9001


而且 有时 gmall-user(service)  8070/  需要提供redis配置

注意：启动类 放在哪个包才能扫描本模块需要的工具的路径 要注意！！！  比如：

需要开启 tomcat --> dubbo ---》zookeeper   和  redis

测试：首先清空cookie中localhost账号，和redis缓存；
1：查看具体商品详情(http://localhost:8082/88.html)  启动：gmall-item-web需要SkuService SpuService提供服务 ====  》启动 gmall-manage-service
2:并加入购物车  启动：   gmall-cart-service 和 gmall-cart-web
3:点击去购物车结算，启动gmall-order-service和gmall-order-web
（点击去结算  启动：gmall-user 和 gmall-passport-web 权限验证 拦截）
5：启动：gmall- payment 8087 支付宝
对 跳过来了

888888888888888888888888888888888888888888888888888888888
为了完成支付后的功能，以后只启动gmall-payment 和 gmall-order-service2个服务。同时用户名在gmall-payment 写死 ；  访问支付页面为：
从加入购物车 到扫码支付 ；可以直接简化为 http://localhost:8087/index?orderId=236（直接选择支付宝还是淘宝进行支付）  其中 orderId=order-info订单中的；每次测试 把这个表中的out_trade_no改下 就能重复
扫码了

//查询的时候  要加到es中 不然查不出来
定时任务：quartz:  定时删除超时订单  order-info中 expire_time 过期时间和当前时间； https://blog.csdn.net/u012907049/article/details/73801122/  提交es
分布式缓存、
缓存击穿
雪崩
分布式session
分布式事务、
分布式发号器、
分布式任务、
分布式文件存储、
分布式检测
分布式mq
分布式
EIK 日志
全链路压测
限流降级
项目架构演进和技术落地最终清单：
jvm优化  tomcat优化 es优化 慢查询 mysql优化 mq优化  前端优化